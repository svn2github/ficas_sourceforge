
% Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
% All rights reserved.
% 
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are
% met:
% 
%     - Redistributions of source code must retain the above copyright
%       notice, this list of conditions and the following disclaimer.
% 
%     - Redistributions in binary form must reproduce the above copyright
%       notice, this list of conditions and the following disclaimer in
%       the documentation and/or other materials provided with the
%       distribution.
% 
%     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
%       names of its contributors may be used to endorse or promote products
%       derived from this software without specific prior written permission.
% 
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
% IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
% TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
% PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
% OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
% EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
% PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES-- LOSS OF USE, DATA, OR
% PROFITS-- OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
% LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
% NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
% SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


\texht{\setcounter{chapter}{3}}{} % Chapter 4

% *********************************************************************
\head{chapter}{Input Files and Output Styles}{ugInOut}
% *********************************************************************

In this chapter we discuss how to collect \Language{} statements
and commands into files and then read the contents into the
workspace.
We also show how to display the results of your computations in
several different styles including \texht{\TeX}{TeX}, FORTRAN and
monospace two-dimensional format.\footnote{\texht{\TeX}{TeX} is a
trademark of the American Mathematical Society.}

The printed version of this book uses the \Language{}
\texht{\TeX}{TeX} output formatter.
When we demonstrate a particular output style, we will need to
turn \texht{\TeX}{TeX} formatting off and the output style on so
that the correct output is shown in the text.

% *********************************************************************
\head{section}{Input Files}{ugInOutIn}
% *********************************************************************
%
In this section we explain what an {\it input file} is and
\index{file!input}
why you would want to know about it.
We discuss where \Language{} looks for input files and how you can
direct it to look elsewhere.
We also show how to read the contents of an input file into the
\spadgloss{workspace} and how to use the \spadgloss{history}
facility to generate an input file from the statements you have
entered directly into the workspace.

An {\it input} file contains \Language{} expressions and system
commands.
Anything that you can enter directly to \Language{} can be put
into an input file.
This is how you save input functions and expressions that you wish
to read into \Language{} more than one time.

To read an input file into \Language{}, use the \spadcmd{)read}
system command.
\syscmdindex{read}
For example, you can read a file in a particular directory by issuing
\begin{verbatim}
)read /spad/src/input/matrix.input
\end{verbatim}
The ``{\bf .input}'' is optional; this also works:
\begin{verbatim}
)read /spad/src/input/matrix
\end{verbatim}
What happens if you just enter
\spadcmd{)read matrix.input} or even \spadcmd{)read matrix}?
\Language{} looks in your current working directory for input files
that are not qualified by a directory name.
Typically, this directory is the directory from which you invoked
\Language{}.
To change the current working directory, use the \spadcmd{)cd} system command.
The command \spadsys{)cd} by itself shows the current
working
\index{directory!default for searching}
directory.
\syscmdindex{cd}
To change it to
\index{file!input!where found}
the \spadsys{src/input} subdirectory for user ``babar'',
issue
\begin{verbatim}
)cd /u/babar/src/input
\end{verbatim}
\Language{} looks first in this directory for an input file.
If it is not found, it looks in the system's directories, assuming
you meant some input file that was provided with \Language{}.

\beginImportant
If you have the \Language{} history facility turned on (which it is
by default), you can save all the lines you have entered into the
workspace by entering
\begin{verbatim}
)history )write
\end{verbatim}
\syscmdindex{history )write}

\Language{} tells you what input file to edit to see your
statements.
The file is in your home directory or in the directory you
specified with \spadsys{)cd}.
\syscmdindex{cd}
\endImportant

In \spadref{ugLangBlocks}
we discuss using indentation in input files to group statements
into {\it blocks.}

% *********************************************************************
\head{section}{The fricas.input File}{ugInOutSpadprof}
% *********************************************************************

When \Language{} starts up, it tries to read the input file
{\bf fricas.input} from your home
\index{start-up profile file}
directory.
\index{file!start-up profile}
It there is no {\bf fricas.input} in your home directory, it reads the copy
located in its own {\bf src/input} directory.
\index{file!fricas.input @{\bf fricas.input}}
The file usually contains
system commands to personalize your \Language{} environment.
In the remainder of this section we mention a few things
that users frequently place in their
{\bf fricas.input} files.

In order to have FORTRAN output always produced from your
computations, place the system command
\spadcmd{)set output fortran on}
in {\bf fricas.input}.
\syscmdindex{quit}
If you do want to be prompted for confirmation when you issue
the \spadcmd{)quit} system command, place
\spadcmd{)set quit protected}
in {\bf fricas.input}.
\syscmdindex{set quit protected}
If you then decide that you do not want to be prompted, issue
\spadcmd{)set quit unprotected}.
\syscmdindex{set quit unprotected}
This is the default setting
% so that new users do not leave \Language{}
% inadvertently.
\footnote{The
system command \spadsys{)pquit} always prompts you for
confirmation.}

To see the other system variables you can set, issue \spadsys{)set}
or use the \HyperName{} {\bf Settings} facility to view and change
\Language{} system variables.

% *********************************************************************
\head{section}{Common Features of Using Output Formats}{ugInOutOut}
% *********************************************************************

In this section we discuss how to start and stop the display
\index{output formats!common features}
of the different output formats and how to send the output to the
screen or to a file.
\index{file!sending output to}
To fix ideas, we use FORTRAN output format for most of the
examples.

You can use the \spadcmd{)set output}
system
\index{output formats!starting}
command to
\index{output formats!stopping}
toggle or redirect the different kinds of output.
\syscmdindex{set output}
The name of the kind of output follows ``output'' in the command.
The names are

\begin{texonly}
\begin{tabular}{@{}ll}
\bf fortran & for FORTRAN output. \\
\bf algebra & for monospace two-dimensional mathematical output. \\
\bf tex     & for \texht{\TeX}{TeX} output. \\
\bf script  & for IBM Script Formula Format output.
\end{tabular}
\end{texonly}
\htonly
\begin{description}
\item[fortran]  for FORTRAN output.
\item[algebra]  for monospace two-dimensional mathematical output.
\item[tex]      for \texht{\TeX}{TeX} output.
\item[mathml]   for Math ML output.
\item[texmacs]  for Texmacs output.
\item[script]   for IBM Script Formula Format output.
\end{description}
\endhtonly

For example, issue \spadsys{)set output fortran on} to turn on
FORTRAN format and
issue \spadsys{)set output fortran off} to turn it off.
By default, {\tt algebra} is {\tt on} and all others are {\tt off}.
\syscmdindex{set output fortran}
When output is started, it is sent to the screen.
To send the output to a file, give the file name without
\index{output formats!sending to file}
directory or extension.
\Language{} appends a file extension depending on the kind of
output being produced.
\xtc{
Issue this to redirect FORTRAN output to, for example, the file
{\bf linalg.sfort}.
}{
\spadcommand{)set output fortran linalg}
}
\noOutputXtc{
You must {\it also} turn on the creation of FORTRAN output.
The above just says where it goes if it is created.
}{
\spadcommand{)set output fortran on}
}
In what directory is this output placed?
It goes into the directory from which you started \Language{},
or if you have used the \spadsys{)cd} system command, the one
that you specified with \spadsys{)cd}.
\syscmdindex{cd}
You should use \spadcmd{)cd} before you send the output to the file.

\noOutputXtc{
You can always direct output back to the screen by issuing this.
\index{output formats!sending to screen}
}{
\spadcommand{)set output fortran console}
}
\noOutputXtc{
Let's make sure FORTRAN formatting is off so that nothing we
do from now on produces FORTRAN output.
}{
\spadcommand{)set output fortran off}
}
\noOutputXtc{
We also delete the demonstrated output file we created.
}{
\spadcommand{)system rm linalg.sfort}
}

You can abbreviate the words ``\spad{on},'' ``\spad{off}'' and
``\spad{console}'' to the minimal number
of characters needed to distinguish them.
Because of this, you cannot send output to files called
{\bf on.sfort, off.sfort, of.sfort,
console.sfort, consol.sfort} and so on.

The width of the output on the page is set by
\index{output formats!line length}
\spadcmd{)set output length}
for all formats except FORTRAN.
\syscmdindex{set output length}
Use \spadcmd{)set fortran fortlength} to
change the FORTRAN line length from its default value of \spad{72}.

% *********************************************************************
\head{section}{Monospace Two-Dimensional Mathematical Format}{ugInOutAlgebra}
% *********************************************************************

This is the default output format for \Language{}.
\syscmdindex{set output algebra}
It is usually on when you start the system.
\index{output formats!monospace 2D}
\index{monospace 2D output format}

\texht{\vskip 4pc}{}
\noOutputXtc{
If it is not, issue this.
}{
\spadcommand{)set output algebra on \bound{algon}}
}
\noOutputXtc{
Since the printed version of this book
(as opposed to the \HyperName{} version)
shows output produced by the
\texht{\TeX}{TeX}{} output formatter,
let us temporarily turn off
\texht{\TeX}{TeX}{} output.
}{
\spadcommand{)set output tex off \bound{texoff}}
}
\xtc{
Here is an example of what it looks like.
}{
\spadcommand{matrix [[i*x^i + j*\%i*y^j for i in 1..2] for j in 3..4] \free{algon texoff}}
}
\noOutputXtc{
Issue this to turn off this kind of formatting.
}{
\spadcommand{)set output algebra off}
}
\noOutputXtc{
Turn \texht{\TeX}{TeX}{} output on again.
}{
\spadcommand{)set output tex on}
}

The characters used for the matrix brackets above are rather ugly.
You get this character set when you issue
\index{character set}
\spadcmd{)set output characters plain}.
\syscmdindex{set output characters}
This character set should be used when your machine or your
version of \Language{}
does not support Unicode character set.
If your machine and your version of \Language{} support Unicode, issue
\spadcmd{)set output characters default}
to get better looking output.

% *********************************************************************
\head{section}{TeX Format}{ugInOutTeX}
% *********************************************************************

\Language{} can produce \texht{\TeX}{TeX}{} output for your
\index{output formats!TeX @{\TeX}}
expressions.
\index{TeX output format @{\TeX} output format}
The output is produced using macros from the
\texht{\LaTeX}{LaTeX} document preparation system by
Leslie Lamport.\footnote{See Leslie Lamport, {\it LaTeX: A Document
Preparation System,} Reading, Massachusetts: Addison-Wesley
Publishing Company, Inc., 1986.}
The printed version of this book was produced using this formatter.

\noOutputXtc{
To turn on \texht{\TeX}{TeX}{} output formatting, issue this.
\syscmdindex{set output tex}
}{
\spadcommand{)set output tex on \bound{texon}}
}
Here is an example of its output.
\begin{verbatim}
matrix [[i*x^i + j*\%i*y^j for i in 1..2] for j in 3..4]

\[
\left[
\begin{array}{cc}
\displaystyle {{3 \  \%i \  {y \sp 3}}+x}&
\displaystyle {{3 \  \%i \  {y \sp 3}}+{2 \  {x \sp 2}}} \\
\displaystyle {{4 \  \%i \  {y \sp 4}}+x}&
\displaystyle {{4 \  \%i \  {y \sp 4}}+{2 \  {x \sp 2}}}
\end{array}
\right]
\leqno(3)
\]
%AXIOM STEP NUMBER: 3
\end{verbatim}
\begin{texonly}
This formats as
$$
\left[
\begin{array}{cc}
\displaystyle {{3 \  \%i \  {y \sp 3}}+x}&
\displaystyle {{3 \  \%i \  {y \sp 3}}+{2 \  {x \sp 2}}} \\
\displaystyle {{4 \  \%i \  {y \sp 4}}+x}&
\displaystyle {{4 \  \%i \  {y \sp 4}}+{2 \  {x \sp 2}}}
\end{array}
\right]
$$
\end{texonly}%
To turn \texht{\TeX}{TeX}{} output formatting off, issue \spadsys{)set
output tex off}.
The \texht{\LaTeX}{LaTeX} macros in the output generated by \Language{}
are all standard except for the following definitions:
\begin{verbatim}
\def\csch{\mathop{\rm csch}\nolimits}

\def\erf{\mathop{\rm erf}\nolimits}

\def\zag#1#2{
  {{\hfill \left. {#1} \right|}
   \over
   {\left| {#2} \right. \hfill}
  }
}
\end{verbatim}
% *********************************************************************
\head{section}{Math ML Format}{ugInOutMathML}
% *********************************************************************

\Language{} can
\index{output formats!Math ML Format}
produce Math ML format output for your
\index{Math ML Format}
expressions.

\texht{\vskip 2pc}{}
\noOutputXtc{
To turn Math ML Format on, issue this.
\syscmdindex{set output mathml}
}{
\spadcommand{)set output mathml on}
}
Here is an example of its output.
\begin{verbatim}
x+sqrt(2)

<math xmlns="http://www.w3.org/1998/Math/MathML" mathsize="big" display="block">
<mrow><mi>x</mi><mo>+</mo><msqrt><mrow><mn>2</mn></mrow></msqrt></mrow>
</math>
\end{verbatim}
\noOutputXtc{
To turn Math ML Format output formatting off, issue this.
}{
\spadcommand{)set output mathml off}
}
%
% *********************************************************************
\head{section}{Texmacs Format}{ugInOutTexmacs}
% *********************************************************************

\Language{} can
\index{output formats!Texmacs Format}
produce Texmacs Scheme format output for your
\index{Texmacs Format}
expressions.  This is mostly useful for interfacing with Texmacs.

\texht{\vskip 2pc}{}
\noOutputXtc{
To turn Texmacs Format on, issue this.
\syscmdindex{set output texmacs}
}{
\spadcommand{)set output texmacs on}
}
Here is an example of its output.
\begin{verbatim}
x+sqrt(2)

scheme: (with "mode" "math"
(concat (concat  "x" ) "+" (sqrt (concat  "2" )))
)
\end{verbatim}
\noOutputXtc{
To turn Texmacs Format output formatting off, issue this.
}{
\spadcommand{)set output texmacs off}
}
%
% *********************************************************************
\head{section}{IBM Script Formula Format}{ugInOutScript}
% *********************************************************************

\Language{} can
\index{output formats!IBM Script Formula Format}
produce IBM Script Formula Format output for your
\index{IBM Script Formula Format}
expressions.

\texht{\vskip 2pc}{}
\noOutputXtc{
To turn IBM Script Formula Format on, issue this.
\syscmdindex{set output script}
}{
\spadcommand{)set output script on}
}
Here is an example of its output.
\begin{verbatim}
matrix [[i*x^i + j*%i*y^j for i in 1..2] for j in 3..4]

.eq set blank @
:df.
<left lb <<<<3 @@ %i @@ <y sup 3>>+x> here <<3 @@ %i @@
<y sup 3>>+<2 @@ <x sup 2>>>> habove <<<4 @@ %i @@
<y sup 4>>+x> here <<4 @@ %i @@ <y sup 4>>+<2 @@
<x up 2>>>>> right rb>
:edf.
\end{verbatim}
\noOutputXtc{
To turn IBM Script Formula Format output formatting off, issue this.
}{
\spadcommand{)set output script off}
}

% *********************************************************************
\head{section}{FORTRAN Format}{ugInOutFortran}
% *********************************************************************

In addition to turning FORTRAN output on and off and stating where the
\index{output formats!FORTRAN}
output should be placed, there are many options that control the
\index{FORTRAN output format}
appearance of the generated code.
In this section we describe some of the basic options.
Issue \spadcmd{)set fortran} to see a full list with their current
settings.

The output FORTRAN expression usually begins in column 7.
If the expression needs more than one line, the ampersand character
\spadSyntax{\&} is used in column 6.
Since some versions of FORTRAN have restrictions on the number of lines
per statement, \Language{} breaks long expressions into segments with
a maximum of 1320 characters (20 lines of 66 characters) per segment.
\syscmdindex{set fortran}
If you want to change this, say, to 660 characters,
issue the system command
\syscmdindex{set fortran explength}
\spadcmd{)set fortran explength 660}.
\index{FORTRAN output format!breaking into multiple statements}
You can turn off the line breaking by issuing
\spadcmd{)set fortran segment off}.
\syscmdindex{set fortran segment}
Various code optimization levels are available.
%
\noOutputXtc{
FORTRAN output is produced after you issue this.
\syscmdindex{set output fortran}
}{
\spadcommand{)set output fortran on \bound{forton}}
}
\noOutputXtc{
For the initial examples, we set the optimization level to 0, which is the
lowest level.
\syscmdindex{set fortran optlevel}
}{
\spadcommand{)set fortran optlevel 0 \bound{opt0}\free{forton}}
}
\noOutputXtc{
The output is usually in columns 7 through 72, although fewer columns
are used in the following examples so that the output
\index{FORTRAN output format!line length}
fits nicely on the page.
}{
\spadcommand{)set fortran fortlength 60}
}
\xtc{
By default, the output goes to the screen and is displayed
before the standard \Language{} two-dimensional output.
In this example, an
assignment to the variable \spad{R1} was generated because this is
the result of step 1.
}{
\spadcommand{(x+y)^3 \free{opt0}}
}
\xtc{
Here is an example that illustrates the line breaking.
}{
\spadcommand{(x+y+z)^3 \free{opt0}}
}

Note in the above examples that integers are generally converted to
\index{FORTRAN output format!integers vs. floats}
floating point numbers, except in exponents.
This is the default behavior but can be turned off by issuing
\spadcmd{)set fortran ints2floats off}.
\syscmdindex{set fortran ints2floats}
The rules governing when the conversion is done are:
\begin{enumerate}
\item If an integer is an exponent, convert it to a floating point
number if it is greater than 32767 in absolute value, otherwise leave it
as an integer.
\item Convert all other integers in an expression to floating
point numbers.
\end{enumerate}
These rules only govern integers in expressions.
Numbers generated by \Language{} for \spad{DIMENSION} statements are also
integers.

To set the type of generated FORTRAN data,
\index{FORTRAN output format!data types}
use one of the following:
\begin{verbatim}
)set fortran defaulttype REAL
)set fortran defaulttype INTEGER
)set fortran defaulttype COMPLEX
)set fortran defaulttype LOGICAL
)set fortran defaulttype CHARACTER
\end{verbatim}

\xtc{
When temporaries are created, they are given a default type of
{\tt REAL.}
Also, the {\tt REAL} versions of functions are used by default.
}{
\spadcommand{sin(x) \free{opt1}}
}
\noOutputXtc{
At optimization level 1, \Language{} removes common subexpressions.
\index{FORTRAN output format!optimization level}
\syscmdindex{set fortran optlevel}
}{
\spadcommand{)set fortran optlevel 1 \bound{opt1}\free{forton}}
}
\xtc{
}{
\spadcommand{(x+y+z)^3 \free{opt1}}
}
\noOutputXtc{
This changes the precision to {\tt DOUBLE}.
\syscmdindex{set fortran precision double}
Substitute \spad{single} for \spad{double}
\index{FORTRAN output format!precision}
to return to single precision.
\syscmdindex{set fortran precision single}
}{
\spadcommand{)set fortran precision double \free{opt1}\bound{double1}}
}
\xtc{
Complex constants display the precision.
}{
\spadcommand{2.3 + 5.6*\%i  \free{double1}}
}
\xtc{
The function names that \Language{} generates depend on the chosen
precision.
}{
\spadcommand{sin \%e  \free{double1}}
}
\noOutputXtc{
Reset the precision to \spad{single} and look at these two
examples again.
}{
\spadcommand{)set fortran precision single \free{opt1}\bound{single1}}
}
\xtc{
}{
\spadcommand{2.3 + 5.6*\%i  \free{single1}}
}
\xtc{
}{
\spadcommand{sin \%e  \free{single1}}
}
\xtc{
Expressions that look like lists, streams, sets or matrices cause
array code to be generated.
}{
\spadcommand{[x+1,y+1,z+1] \free{opt1}}
}
\xtc{
A temporary variable is generated to be the name of the array.
\index{FORTRAN output format!arrays}
This may have to be changed in your particular application.
}{
\spadcommand{set[2,3,4,3,5] \free{opt1}}
}
\xtc{
By default, the starting index for generated FORTRAN arrays is \spad{0}.
}{
\spadcommand{matrix [[2.3,9.7],[0.0,18.778]] \free{opt1}}
}
\noOutputXtc{
To change the starting index for generated FORTRAN arrays to be \spad{1},
\syscmdindex{set fortran startindex}
issue this.
This value can only be \spad{0} or \spad{1}.
}{
\spadcommand{)set fortran startindex 1 \free{opt1}\bound{start1}}
}
\xtc{
Look at the code generated for the matrix again.
}{
\spadcommand{matrix [[2.3,9.7],[0.0,18.778]] \free{start1}}
}
