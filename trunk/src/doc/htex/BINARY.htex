
% Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
% All rights reserved.
% 
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are
% met:
% 
%     - Redistributions of source code must retain the above copyright
%       notice, this list of conditions and the following disclaimer.
% 
%     - Redistributions in binary form must reproduce the above copyright
%       notice, this list of conditions and the following disclaimer in
%       the documentation and/or other materials provided with the
%       distribution.
% 
%     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
%       names of its contributors may be used to endorse or promote products
%       derived from this software without specific prior written permission.
% 
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
% IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
% TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
% PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
% OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
% EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
% PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES-- LOSS OF USE, DATA, OR
% PROFITS-- OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
% LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
% NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
% SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


 
% binary.htex
All rational numbers have repeating binary expansions.
Operations to access the individual bits of a binary expansion can
be obtained by converting the value to \spadtype{RadixExpansion(2)}.
More examples of expansions are available in
\xmpref{DecimalExpansion},
\xmpref{HexadecimalExpansion}, and
\xmpref{RadixExpansion}.
 
\xtc{
The expansion (of type \spadtype{BinaryExpansion}) of a rational number
is returned by the \spadfunFrom{binary}{BinaryExpansion} operation.
}{
\spadcommand{r := binary(22/7) \bound{r}}
}
\xtc{
Arithmetic is exact.
}{
\spadcommand{r + binary(6/7) \free{r}}
}
\xtc{
The period of the expansion can be short or long \ldots
}{
\spadcommand{[binary(1/i) for i in 102..106] }
}
\xtc{
or very long.
}{
\spadcommand{binary(1/1007) }
}
\xtc{
These numbers are bona fide algebraic objects.
}{
\spadcommand{p := binary(1/4)*x^2 + binary(2/3)*x + binary(4/9)  \bound{p}}
}
\xtc{
}{
\spadcommand{q := D(p, x) \free{p}\bound{q}}
}
\xtc{
}{
\spadcommand{g := gcd(p, q)            \free{p q}\bound{g}}
}
